name: Custom actions demo
on:
  push:
    branches:
      - main
    paths:
      - custom-actions/**
      - .github/workflows/custom-actions.yml
      - .github/actions/cached-dependencies/action.yml
  workflow_dispatch:
jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: custom-actions
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install and cache dependencies
        id: install-and-cache-dependencies
        uses: ./.github/actions/cached-dependencies # Path needs to start from the root of the project and it's not related to the workflow file. You need to have action.yml here and it is automatically found. Alternatively, if you created a repository for the action you could reference it here like this: aarneharju/my-action
        with:
          use-caching: 'false'
      - name: Output whether cache was used
        run: echo "Cache was used? ${{ steps.install-and-cache-dependencies.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: custom-actions
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: custom-actions/test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: custom-actions
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: custom-actions/dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./custom-actions/dist
      - name: Output contents
        run: ls ./custom-actions/
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy site
        uses: ./.github/actions/deploy-s3-docker
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          aws-bucket: github-actions-custom-action-hosting-test
          aws-bucket-region: eu-north-1
          dist-folder: custom-actions/dist
      - name: Print website url
        run: |
          echo "Live URL: ${{steps.deploy-site.outputs.website-url}}"
